package carrental.server;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Izaek Kisuule
 */
import java.sql.*;
import javax.swing.*;

public class CustomerManagement extends javax.swing.JFrame {

    /**
     * Creates new form CustomerManagement
     */
    public CustomerManagement() {
        initComponents();
        setTitle("Customer Management - Car Rental System");
        setSize(900, 900);
        setLocationRelativeTo(null);
        loadCustomers();
    }

    private void loadCustomers() {
        try {
            // Use your existing connection method
            Connection conn = DbConnection.getConnection();

            String sql = "SELECT customer_id, first_name, last_name FROM customers ORDER BY customer_id ASC";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            CustomerCmbBox.removeAllItems();
            CustomerCmbBox.addItem("-- Select Customer ID --");

            while (rs.next()) {
                CustomerCmbBox.addItem(rs.getInt("customer_id") + " - " + rs.getString("first_name") + " " + rs.getString("last_name"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading customer IDs: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LblcustomerId = new javax.swing.JLabel();
        LblfirstName = new javax.swing.JLabel();
        LblLastName = new javax.swing.JLabel();
        LblEmail = new javax.swing.JLabel();
        LblPhonenumber = new javax.swing.JLabel();
        LblAddress = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        txtLastnameField = new javax.swing.JTextField();
        txtAddressField = new javax.swing.JTextField();
        txtEmailField = new javax.swing.JTextField();
        txtPhonenumberField = new javax.swing.JTextField();
        txtFirstnameField = new javax.swing.JTextField();
        LblLicenseNumber = new javax.swing.JLabel();
        txtLicenseNumber = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        CustomerCmbBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LblcustomerId.setText("Customer ID");

        LblfirstName.setText("First name");

        LblLastName.setText("Last name");

        LblEmail.setText("Email");

        LblPhonenumber.setText("Phone number");

        LblAddress.setText("Address ");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        LblLicenseNumber.setText("Lisense_number");

        btnBack.setText("Back to Dashboard");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        CustomerCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAdd)
                    .addComponent(LblcustomerId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblfirstName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblLastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblPhonenumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblLicenseNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)))
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)
                        .addGap(49, 49, 49)
                        .addComponent(btnFind))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFirstnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtLastnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtEmailField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtPhonenumberField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtAddressField, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(txtLicenseNumber)
                            .addComponent(CustomerCmbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LblcustomerId)
                    .addComponent(CustomerCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFirstnameField)
                    .addComponent(LblfirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtLastnameField)
                    .addComponent(LblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmailField)
                    .addComponent(LblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPhonenumberField)
                    .addComponent(LblPhonenumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddressField)
                    .addComponent(LblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblLicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnClear)
                    .addComponent(btnFind))
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "UPDATE Customers SET first_name=?, last_name=?, email=?, phone_number=?, address=? WHERE customer_id=?";
            PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, txtFirstnameField.getText());
            pst.setString(2, txtLastnameField.getText());
            pst.setString(3, txtEmailField.getText());
            pst.setString(4, txtPhonenumberField.getText());
            pst.setString(5, txtAddressField.getText());

            pst.setInt(6, Integer.parseInt(((String) CustomerCmbBox.getSelectedItem()).split("-")[0].trim()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Customer Updated!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error updating customer: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        try (Connection conn = DbConnection.getConnection()) {
            String sql = "INSERT INTO Customers(first_name, last_name, email, phone_number, address, license_number) VALUES(?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, txtFirstnameField.getText());
            pst.setString(2, txtLastnameField.getText());
            pst.setString(3, txtEmailField.getText());
            pst.setString(4, txtPhonenumberField.getText());
            pst.setString(5, txtAddressField.getText());
            pst.setString(6, txtLicenseNumber.getText());
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Customer Added!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error adding customer: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try (Connection conn = DbConnection.getConnection()) {
            String selectedItem = (String) CustomerCmbBox.getSelectedItem();

            if (selectedItem == null || selectedItem.equals("-- Select Customer --")) {
                JOptionPane.showMessageDialog(this, "Please select a customer to delete.");
                return;
            }
            int customerId = Integer.parseInt(selectedItem.split(" - ")[0].trim());
            String sql = "DELETE FROM Customers WHERE customer_id=?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, customerId);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Customer deleted successfully!");
            loadCustomers();
            txtFirstnameField.setText("");
            txtLastnameField.setText("");
            txtEmailField.setText("");
            txtPhonenumberField.setText("");
            txtAddressField.setText("");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error deleting customer: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        try (Connection conn = DbConnection.getConnection()) {
            String selectedItem = (String) CustomerCmbBox.getSelectedItem();

            if (selectedItem == null || selectedItem.equals("-- Select Customer --")) {
                JOptionPane.showMessageDialog(this, "Please select a customer.");
                return;
            }
            int customerId = Integer.parseInt(selectedItem.split(" - ")[0].trim());
            String sql = "SELECT * FROM Customers WHERE customer_id = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, customerId);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtFirstnameField.setText(rs.getString("first_name"));
                txtLastnameField.setText(rs.getString("last_name"));
                txtEmailField.setText(rs.getString("email"));
                txtPhonenumberField.setText(rs.getString("phone_number"));
                txtAddressField.setText(rs.getString("address"));
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error finding customer: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        loadCustomers();
        txtFirstnameField.setText("");
        txtLastnameField.setText("");
        txtEmailField.setText("");
        txtPhonenumberField.setText("");
        txtAddressField.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CustomerCmbBox;
    private javax.swing.JLabel LblAddress;
    private javax.swing.JLabel LblEmail;
    private javax.swing.JLabel LblLastName;
    private javax.swing.JLabel LblLicenseNumber;
    private javax.swing.JLabel LblPhonenumber;
    private javax.swing.JLabel LblcustomerId;
    private javax.swing.JLabel LblfirstName;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField txtAddressField;
    private javax.swing.JTextField txtEmailField;
    private javax.swing.JTextField txtFirstnameField;
    private javax.swing.JTextField txtLastnameField;
    private javax.swing.JTextField txtLicenseNumber;
    private javax.swing.JTextField txtPhonenumberField;
    // End of variables declaration//GEN-END:variables

}
