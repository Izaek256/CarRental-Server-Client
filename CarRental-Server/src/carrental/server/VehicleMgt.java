/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrental.server;

import java.sql.*;
import javax.swing.*;

/**
 *
 * @author Izaek Kisuule
 */
public class VehicleMgt extends javax.swing.JFrame {
    
    public VehicleMgt() {
        initComponents();
        setSize(900, 900);
        loadCarIds();
        setTitle("Car Management - Car Rental System");
        setLocationRelativeTo(null);
    }
    
    private void loadCarIds() {
        ComboBoxCarId.removeAllItems();
        ComboBoxCarId.addItem("Select Car");
        
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "SELECT car_id, make, model FROM Cars ORDER BY car_id";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) {
                int carId = rs.getInt("car_id");
                String make = rs.getString("make");
                String model = rs.getString("model");
                ComboBoxCarId.addItem(carId + " - " + make + " " + model);
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error loading car IDs: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LblPlatenumber = new javax.swing.JLabel();
        LblModel = new javax.swing.JLabel();
        LblRate = new javax.swing.JLabel();
        LblStatus = new javax.swing.JLabel();
        txtPlate = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        LblMake = new javax.swing.JLabel();
        txtMake = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        LblYear = new javax.swing.JLabel();
        LblMile = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMile = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        LblCarID = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        ComboBoxCarId = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LblPlatenumber.setText("Plate Number");

        LblModel.setText("Model");

        LblRate.setText("Rental Rate");

        LblStatus.setText("Status");

        txtRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRateActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        LblMake.setText("Make ");

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        LblYear.setText("Year");

        LblMile.setText("Mileage");

        jLabel2.setText("Color");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available" ,"Rented", "Maintenance"}));

        LblCarID.setText("Car Id");

        btnBack.setText("Back To Dashboard");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        ComboBoxCarId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LblCarID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblPlatenumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblMake, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LblMile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(btnAdd)
                                .addGap(26, 26, 26)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addGap(50, 50, 50)
                                .addComponent(btnFind)
                                .addGap(31, 31, 31))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtModel, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(txtMake, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(txtPlate, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(txtYear, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(txtRate, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(cmbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtColor)
                                .addComponent(txtMile, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(ComboBoxCarId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(btnBack)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblCarID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxCarId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMake)
                    .addComponent(LblMake, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtModel)
                    .addComponent(LblModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblPlatenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblRate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblMile, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnFind))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String selected = ComboBoxCarId.getSelectedItem().toString();
        if (selected.equals("Select Car")) {
            JOptionPane.showMessageDialog(this, "Please select a car!");
            return;
        }
        
        int carId = Integer.parseInt(selected.split(" - ")[0]);
        
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "SELECT * FROM Cars WHERE car_id=?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, carId);
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                txtMake.setText(rs.getString("make"));
                txtModel.setText(rs.getString("model"));
                txtYear.setText(String.valueOf(rs.getInt("year")));
                txtPlate.setText(rs.getString("license_plate"));
                txtRate.setText(String.valueOf(rs.getDouble("rental_rate")));
                cmbStatus.setSelectedItem(rs.getString("status"));
                txtColor.setText(rs.getString("color"));
                txtMile.setText(String.valueOf(rs.getInt("mileage")));
            } else {
                JOptionPane.showMessageDialog(this, "Car not found!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error finding car: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        if (txtMake.getText().isEmpty() || txtModel.getText().isEmpty() || txtYear.getText().isEmpty() || txtPlate.getText().isEmpty() || txtRate.getText().isEmpty() || txtColor.getText().isEmpty() || cmbStatus.getSelectedItem().equals(false) || txtMile.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter all informations in the fields");
        }
        
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "INSERT INTO Cars(make, model, year,license_plate, rental_rate, status, color, mileage) VALUES (?,?,?,?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, txtMake.getText());
            pst.setString(2, txtModel.getText());
            pst.setInt(3, Integer.parseInt(txtYear.getText()));
            pst.setString(4, txtPlate.getText());
            pst.setDouble(5, Double.parseDouble(txtRate.getText()));
            pst.setString(6, cmbStatus.getSelectedItem().toString());
            pst.setString(7, txtColor.getText());
            pst.setInt(8, Integer.parseInt(txtMile.getText()));
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Car Added!");
//            loadCars();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error :" + ex.getMessage());
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String selected = ComboBoxCarId.getSelectedItem().toString();
        if (selected.equals("Select Car")) {
            JOptionPane.showMessageDialog(this, "Please select a car!");
            return;
        }
        
        int carId = Integer.parseInt(selected.split(" - ")[0]);
        
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "UPDATE Cars SET make=?, model=?, year=?, license_plate=?, rental_rate=?, status=?, color=?, mileage=? WHERE car_id=?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, txtMake.getText());
            pst.setString(2, txtModel.getText());
            pst.setInt(3, Integer.parseInt(txtYear.getText()));
            pst.setString(4, txtPlate.getText());
            pst.setDouble(5, Double.parseDouble(txtRate.getText()));
            pst.setString(6, cmbStatus.getSelectedItem().toString());
            pst.setString(7, txtColor.getText());
            pst.setInt(8, Integer.parseInt(txtMile.getText()));
            pst.setInt(9, carId);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Car Updated!");
            
            txtColor.setText("");
            txtMake.setText("");
            txtMile.setText("");
            txtModel.setText("");
            txtPlate.setText("");
            txtRate.setText("");
            txtYear.setText("");
            cmbStatus.setSelectedIndex(0);
            ComboBoxCarId.setSelectedIndex(0);
            
            loadCarIds();
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error updating car: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:

        txtColor.setText("");
        txtMake.setText("");
        txtMile.setText("");
        txtModel.setText("");
        txtPlate.setText("");
        txtRate.setText("");
        txtYear.setText("");
        cmbStatus.setSelectedItem("");
        ComboBoxCarId.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String selected = ComboBoxCarId.getSelectedItem().toString();
        if (selected.equals("Select Car")) {
            JOptionPane.showMessageDialog(this, "Please select a car!");
            return;
        }
        
        int carId = Integer.parseInt(selected.split(" - ")[0]);
        
        try (Connection conn = DbConnection.getConnection()) {
            String sql = "DELETE FROM Cars WHERE car_id=?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, carId);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Car Deleted!");
            
            txtColor.setText("");
            txtMake.setText("");
            txtMile.setText("");
            txtModel.setText("");
            txtPlate.setText("");
            txtRate.setText("");
            txtYear.setText("");
            cmbStatus.setSelectedIndex(0);
            ComboBoxCarId.setSelectedIndex(0);
            
            loadCarIds();
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error deleting car: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleMgt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleMgt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCarId;
    private javax.swing.JLabel LblCarID;
    private javax.swing.JLabel LblMake;
    private javax.swing.JLabel LblMile;
    private javax.swing.JLabel LblModel;
    private javax.swing.JLabel LblPlatenumber;
    private javax.swing.JLabel LblRate;
    private javax.swing.JLabel LblStatus;
    private javax.swing.JLabel LblYear;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtMile;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPlate;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
